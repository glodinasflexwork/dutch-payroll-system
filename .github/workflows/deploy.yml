name: Deploy to Vercel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate Prisma clients
      run: |
        npx prisma generate --schema=prisma/auth.prisma
        npx prisma generate --schema=prisma/hr.prisma
        npx prisma generate --schema=prisma/payroll.prisma
      
    - name: Build project
      run: npm run build
      
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./
        
    - name: Set Environment Variables
      if: github.ref == 'refs/heads/main'
      run: |
        npx vercel env add AUTH_DATABASE_URL production --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} --yes || echo "AUTH_DATABASE_URL already exists"
        npx vercel env add HR_DATABASE_URL production --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} --yes || echo "HR_DATABASE_URL already exists"
        npx vercel env add PAYROLL_DATABASE_URL production --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} --yes || echo "PAYROLL_DATABASE_URL already exists"
        npx vercel env add MAILTRAP_API_TOKEN production --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} --yes || echo "MAILTRAP_API_TOKEN already exists"
        npx vercel env add EMAIL_FROM production --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} --yes || echo "EMAIL_FROM already exists"
        npx vercel env add NEXTAUTH_SECRET production --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} --yes || echo "NEXTAUTH_SECRET already exists"
        npx vercel env add NEXTAUTH_URL production --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} --yes || echo "NEXTAUTH_URL already exists"
        npx vercel env add STRIPE_SECRET_KEY production --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} --yes || echo "STRIPE_SECRET_KEY already exists"
        npx vercel env add STRIPE_PUBLISHABLE_KEY production --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} --yes || echo "STRIPE_PUBLISHABLE_KEY already exists"
      env:
        AUTH_DATABASE_URL: ${{ secrets.AUTH_DATABASE_URL }}
        HR_DATABASE_URL: ${{ secrets.HR_DATABASE_URL }}
        PAYROLL_DATABASE_URL: ${{ secrets.PAYROLL_DATABASE_URL }}
        MAILTRAP_API_TOKEN: ${{ secrets.MAILTRAP_API_TOKEN }}
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}

